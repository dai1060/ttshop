<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        ">

    <!--1 引入数据库配置文件-->
    <context:property-placeholder location="classpath:db.properties"/>
    <!--2 配置数据库连接池-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <!--基本连接属性-->
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <!--调优属性-->
        <!--关闭自动提交-->
        <property name="defaultAutoCommit" value="false"/>
    </bean>

    <!--创建mybatis会话工厂,SqlSessionFactory来自mybatis-spring包-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--注入数据源-->
        <property name="dataSource" ref="dataSource" />
        <!--注入mybatis的主配置文件-->
        <property name="configLocation" value="classpath:mybatis/mybatis-config.xml" />
        <!--注入dao层的mapper映射文件,自动扫描-->
        <property name="mapperLocations" value="classpath:com/day/ttshop/dao/*Mapper.xml"/>
    </bean>
    <!--配置完以后DAO层接口不需要实现类-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--注入mybatis会话工厂-->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <!--在这个包下所有接口不需要实现-->
        <property name="basePackage" value="com.day.ttshop.dao"/>
    </bean>

    <!--扫描dao层下的注解类-->
    <context:component-scan base-package="com.day.ttshop.dao"/>
</beans>